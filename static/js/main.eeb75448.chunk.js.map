{"version":3,"sources":["components/Accordion/Accordion.tsx","components/OnOff/OnOff.tsx","components/UnControlledAccordion/UnControlledAccordion.tsx","components/UnControlledRating/UnControlledRating.tsx","components/Rating/Rating.tsx","components/UnControlledOnOff/UnControlledOnOff.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["AccordionTitle","props","console","log","onClick","onclick","collapsed","title","AccordionBody","Accordion","titleValue","OnOff","isOnClass","toggle","isOffClass","className","UnControlledAccordion","useState","setCollapsed","UnControlledRating","value","setValue","Star","selected","Rating","UnControlledOnOff","setToggle","App","ratingValue","setRatingValue","accordionCollapsed","setAccordionCollapsed","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eeb75448.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\ntype AccordionPropsType = {\r\n    titleValue: string\r\n    collapsed: boolean\r\n    onClick: (value: boolean) => void\r\n}\r\n\r\nfunction Accordion(props: AccordionPropsType) {\r\n\r\n    console.log('Accordion rendering');\r\n\r\n    return (\r\n        <div>\r\n            <AccordionTitle title={props.titleValue} onclick={props.onClick} collapsed={!props.collapsed}/>\r\n            {!props.collapsed && <AccordionBody/>}\r\n        </div>\r\n    );\r\n}\r\n\r\ntype AccordionTitlePropsType = {\r\n    title: string\r\n    collapsed: boolean\r\n    onclick: (value: boolean) => void\r\n\r\n}\r\n\r\nfunction AccordionTitle(props: AccordionTitlePropsType) {\r\n\r\n    console.log('AccordionTitle rendering');\r\n    return (\r\n        <h3 onClick={() => props.onclick(props.collapsed)}>{props.title}</h3>\r\n    );\r\n}\r\n\r\nfunction AccordionBody() {\r\n    console.log('AccordionBody rendering');\r\n    return (\r\n        <ul>\r\n            <li>1</li>\r\n            <li>2</li>\r\n            <li>3</li>\r\n        </ul>\r\n    );\r\n}\r\n\r\nexport default Accordion;\r\n","import React from \"react\";\r\n\r\ntype OnOffType = {\r\n    toggle: boolean\r\n    onClick: (value: boolean) => void\r\n}\r\n\r\nexport const OnOff: React.FC<OnOffType> = (props) => {\r\n    console.log('OnOff rendering');\r\n\r\n    const isOnClass = props.toggle ? 'toggle on' : 'toggle';\r\n    const isOffClass = props.toggle ? 'toggle' : 'toggle off';\r\n    const isOn = true;\r\n    const isOff = false;\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <p>TOGGLE --- Controlled</p>\r\n            <div className={\"OnOff\"}>\r\n                <button onClick={() => props.onClick(isOn)} className={isOnClass}>On</button>\r\n                <button onClick={() => props.onClick(isOff)} className={isOffClass}>Off</button>\r\n            </div>\r\n        </>\r\n    );\r\n};","import React, {useState} from \"react\";\r\n\r\n\r\nfunction UnControlledAccordion() {\r\n    console.log('Accordion rendering');\r\n    let [collapsed, setCollapsed] = useState(true);\r\n\r\n\r\n    return (\r\n        <div>\r\n            <AccordionTitle onClick={() => setCollapsed(!collapsed)}/>\r\n\r\n            {!collapsed && <AccordionBody/>}\r\n        </div>\r\n    );\r\n}\r\n\r\ntype AccordionTitlePropsType = {\r\n    onClick: () => void\r\n}\r\n\r\nfunction AccordionTitle(props: AccordionTitlePropsType) {\r\n    console.log('AccordionTitle rendering');\r\n    return (\r\n        <h3 onClick={props.onClick}>-- UnControlledMenu --</h3>\r\n    );\r\n}\r\n\r\nfunction AccordionBody() {\r\n    console.log('AccordionBody rendering');\r\n    return (\r\n        <ul>\r\n            <li>1</li>\r\n            <li>2</li>\r\n            <li>3</li>\r\n        </ul>\r\n    );\r\n}\r\n\r\nexport default UnControlledAccordion;\r\n","import React, {useState} from \"react\";\r\n\r\ntype RatingPropsType = {\r\n    // value: 0 | 1 | 2 | 3 | 4 | 5\r\n}\r\n\r\nexport function UnControlledRating(props: RatingPropsType) {\r\n    console.log('Ratting rendering');\r\n\r\n    let [value, setValue] = useState(2);\r\n\r\n    return (\r\n        <div>\r\n            <Star selected={value > 0} setValue={() => setValue(1)}/>\r\n            <Star selected={value > 1} setValue={() => setValue(2)}/>\r\n            <Star selected={value > 2} setValue={() => setValue(3)}/>\r\n            <Star selected={value > 3} setValue={() => setValue(4)}/>\r\n            <Star selected={value > 4} setValue={() => setValue(5)}/>\r\n        </div>\r\n    );\r\n}\r\n\r\ntype StarPropsType = {\r\n    selected: boolean\r\n    setValue: () => void\r\n}\r\n\r\nfunction Star(props: StarPropsType) {\r\n    console.log('Star rendering');\r\n\r\n    return <span onClick={(value) => props.setValue()}>\r\n        {props.selected ? <b>Star</b> : 'Star'}\r\n    </span>\r\n}\r\n","import React from \"react\";\r\n\r\nexport type RatingValueType = 0 | 1 | 2 | 3 | 4 | 5;\r\n\r\ntype RatingPropsType = {\r\n    value: RatingValueType\r\n    onClick: (value: RatingValueType) => void\r\n}\r\n\r\nexport function Rating(props: RatingPropsType) {\r\n    console.log('Ratting rendering');\r\n\r\n    return (\r\n        <div className={'container'}>\r\n            <Star selected={props.value > 0} onClick={props.onClick} value={1}/>\r\n            <Star selected={props.value > 1} onClick={props.onClick} value={2}/>\r\n            <Star selected={props.value > 2} onClick={props.onClick} value={3}/>\r\n            <Star selected={props.value > 3} onClick={props.onClick} value={4}/>\r\n            <Star selected={props.value > 4} onClick={props.onClick} value={5}/>\r\n        </div>\r\n    );\r\n}\r\n\r\ntype StarPropsType = {\r\n    selected: boolean\r\n    onClick: (value: RatingValueType) => void\r\n    value: RatingValueType\r\n}\r\n\r\nfunction Star(props: StarPropsType) {\r\n    // debugger\r\n    console.log('Star rendering');\r\n    return <span onClick={()=> props.onClick(props.value)}>\r\n        {props.selected ? <b>Star</b> : 'Star'}\r\n    </span>\r\n\r\n\r\n}\r\n","import React, {useState} from \"react\";\r\n\r\nexport const UnControlledOnOff = () => {\r\n    console.log('OnOff rendering')\r\n    let [toggle, setToggle] = useState(false);\r\n    const isOnClass = toggle ? 'toggle on' : 'toggle';\r\n    const isOffClass = toggle ? 'toggle' : 'toggle off';\r\n    const isOn = true;\r\n    const isOff = false;\r\n\r\n    return (<>\r\n            <p>TOGGLE --- UnControlled</p>\r\n            <div className={\"OnOff\"}>\r\n                <button onClick={()=> setToggle(isOn)} className={isOnClass}>On\r\n                </button>\r\n\r\n                <button onClick={()=> setToggle(isOff)} className={isOffClass}>Off\r\n                </button>\r\n            </div>\r\n        </>\r\n\r\n    );\r\n};","import React, {useState} from 'react';\nimport './App.css';\nimport Accordion from \"./components/Accordion/Accordion\";\nimport {OnOff} from \"./components/OnOff/OnOff\";\nimport UnControlledAccordion from \"./components/UnControlledAccordion/UnControlledAccordion\";\nimport {UnControlledRating} from \"./components/UnControlledRating/UnControlledRating\";\nimport {Rating, RatingValueType} from \"./components/Rating/Rating\";\nimport {UnControlledOnOff} from \"./components/UnControlledOnOff/UnControlledOnOff\";\n\nfunction App() {\n    console.log('App rendering');\n    let [ratingValue, setRatingValue] = useState<RatingValueType>(3);\n    let [accordionCollapsed, setAccordionCollapsed] = useState<boolean>(false);\n    let [toggle, setToggle] = useState(true);\n\n    return (\n        <div className={'wrapper'}>\n            <Accordion\n                titleValue={\"-- Menu --\"}\n                collapsed={accordionCollapsed}\n                onClick={setAccordionCollapsed}\n            />\n            <Rating value={ratingValue} onClick={setRatingValue}/>\n            <OnOff toggle={toggle} onClick={setToggle}/>\n\n            <UnControlledOnOff/>\n            <UnControlledAccordion/>\n            <UnControlledRating/>\n        </div>\n    )\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}